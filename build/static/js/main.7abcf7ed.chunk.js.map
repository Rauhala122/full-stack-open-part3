{"version":3,"sources":["components/PersonForm.js","components/Filter.js","services/persons.js","components/Persons.js","App.js","index.js"],"names":["PersonForm","newName","handleNameChange","newNumber","handleNumberChange","addNewPerson","value","onChange","type","onClick","Filter","filterPersons","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Persons","props","filtered","persons","filter","person","name","toLowerCase","includes","map","i","key","number","deletePerson","Notification","message","messageClass","className","App","useState","setPersons","setFilter","setMessage","setMessageClass","useEffect","console","log","noteService","initialPersons","setNewName","setNewNumber","event","target","e","preventDefault","some","o","window","confirm","find","changedPerson","returnedPerson","catch","error","setTimeout","replaceNumber","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7abcf7ed.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({newName, handleNameChange, newNumber, handleNumberChange, addNewPerson}) => {\nreturn (\n  <div>\n    <h2>Add a New </h2>\n    <form>\n      <div>\n        name: <input value={newName} onChange={handleNameChange}/>\n        number: <input value={newNumber} onChange={handleNumberChange}/>\n      </div>\n      <div>\n        <button type=\"submit\" onClick={addNewPerson}>add</button>\n      </div>\n    </form>\n  </div>\n)\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Filter = ({filterPersons}) => {\n\n  return (\n    <div>\n      Filter show with <input onChange={filterPersons}/>\n    </div>\n  )\n}\n\nexport default Filter\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  const request = axios.delete(baseUrl + \"/\" + id)\n  return request\n}\n\nconst replaceNumber = (id, newObject) => {\n  const request = axios.put(baseUrl + \"/\" + id, newObject)\n  return request.then(response => response.data)\n}\n\n// const update = (id, newObject) => {\n//   const request = axios.put(`${baseUrl}/${id}`, newObject)\n//   return request.then(response => response.data)\n// }\n\nexport default { getAll, create, deletePerson, replaceNumber }\n","import React, { useState, useEffect } from 'react'\nimport noteService from '../services/persons'\n\nconst Persons = (props) => {\n  let filtered = props.persons\n\n  const filteredPersons = filtered.filter(person => person.name.toLowerCase().includes(props.filter))\n  \n  return (\n    <div>\n      {\n      filtered.map((person, i) =>\n        <p key={i}>{person.name} {person.number} <button onClick={() => props.deletePerson(person.id)}>Delete</button></p>\n      )}\n    </div>\n  )\n}\nexport default Persons\n","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport axios from 'axios'\nimport Persons from './components/Persons'\nimport noteService from './services/persons'\n\nconst Notification = ({ message, messageClass }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={messageClass}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [filter, setFilter] = useState([])\n  const [message, setMessage] = useState(null)\n  const [messageClass, setMessageClass] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n\n    noteService.getAll().then(initialPersons => {\n      console.log('promise fulfilled')\n      console.log(initialPersons)\n      setPersons(initialPersons)\n    })\n\n  }, [])\n\n  const deletePerson = id => {\n    noteService.deletePerson(id)\n    setPersons(persons.filter(person => person.id !== id))\n    setMessage(\"Deleted \" + persons.find(person => person.id === id).name)\n    setMessageClass(\"success\")\n    setTimeout(() => {\n      setMessage(null)\n      setMessageClass(null)\n    }, 5000)\n  }\n\n  const replaceNumber = id => {\n    const person = persons.find(person => person.id === id)\n    const changedPerson = {...person, number: newNumber}\n    noteService.replaceNumber(id, changedPerson).then(returnedPerson => {\n      setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n    })\n    .catch(error => {\n      setMessage(person.name + \" is already removed\")\n      setMessageClass(\"error\")\n      setTimeout(() => {\n        setMessage(null)\n        setMessageClass(null)\n      }, 5000)\n    })\n    setMessage(person.name + \"'s number changed\")\n    setMessageClass(\"success\")\n    setTimeout(() => {\n      setMessage(null)\n      setMessageClass(null)\n    }, 5000)\n  }\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n\n  const addNewPerson = (event) => {\n    event.preventDefault()\n    if (persons.some(o => o.name == newName)) {\n      let changeNumber = window.confirm(`${newName} is already added to phonebook, do you want to change the number?`)\n      if (changeNumber == true) {\n        const person = persons.find(person => person.name === newName)\n        replaceNumber(person.id)\n      }\n    } else {\n\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n\n      noteService.create(personObject).then(initialPersons => {\n        setPersons(persons.concat(initialPersons))\n        setMessage(\"Added person \" + newName)\n        setMessageClass(\"error\")\n        setTimeout(() => {\n          setMessage(null)\n          setMessageClass(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        setMessage(\"Person's name has to be at least 3 letters and number 8 units\")\n        setMessageClass(\"error\")\n        setTimeout(() => {\n          setMessage(null)\n          setMessageClass(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const filterPersons = (event) => {\n    setFilter(event.target.value.toLowerCase())\n  }\n\n  const handleNameChange = (e) => setNewName(e.target.value)\n  const handleNumberChange = (e) => setNewNumber(e.target.value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageClass={messageClass}/>\n      <Filter filterPersons={filterPersons}/>\n      <PersonForm newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} addNewPerson={addNewPerson}/>\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} deletePerson={deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App\n","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n   <App />,\n   document.getElementById('root')\n )\n"],"sourceRoot":""}